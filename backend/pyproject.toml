[project]
name = "extractify"
dynamic = ["version"]
description = "extract data from images and pdfs"
readme = "README.md"
authors = [
    { name = "Vitor Schirmer", email = "vitor.roberto3022@gmail.com" },
]
dependencies = [
    "annotated-types==0.7.0",
    "anyio==4.8.0",
    "async-timeout==5.0.1",
    "asyncpg==0.30.0",
    "cachecontrol==0.14.2",
    "cachetools==5.5.2",
    "certifi==2025.1.31",
    "cffi==1.17.1",
    "charset-normalizer==3.4.1",
    "click==8.1.8",
    "colorama==0.4.6",
    "cryptography==44.0.1",
    "dnspython==2.7.0",
    "email-validator==2.2.0",
    "exceptiongroup==1.2.1",
    "fastapi==0.115.13",
    "fastapi-cli==0.0.7",
    "firebase-admin==6.6.0",
    "google-api-core==2.19.1",
    "google-api-python-client==2.160.0",
    "google-auth==2.40.2",
    "google-auth-httplib2==0.2.0",
    "google-cloud-core==2.4.1",
    "google-cloud-documentai==3.2.0",
    "google-cloud-firestore==2.20.0",
    "google-cloud-storage==3.0.0",
    "google-crc32c==1.6.0",
    "google-resumable-media==2.7.2",
    "googleapis-common-protos==1.67.0",
    "greenlet==3.1.1",
    "grpcio==1.70.0",
    "grpcio-status==1.62.2",
    "h11==0.14.0",
    "httpcore==1.0.7",
    "httplib2==0.22.0",
    "httptools==0.6.4",
    "httpx==0.28.1",
    "idna==3.10",
    "jinja2==3.1.5",
    "markdown-it-py==3.0.0",
    "markupsafe==3.0.2",
    "mdurl==0.1.2",
    "motor==3.4.0",
    "msgpack==1.1.0",
    "orjson==3.11.0",
    "packaging==24.2",
    "passlib==1.7.4",
    "pillow==11.1.0",
    "proto-plus==1.26.0",
    "protobuf==5.29.3",
    "psycopg==3.2.5",
    "pyasn1==0.6.1",
    "pyasn1-modules==0.4.0",
    "pycparser==2.22",
    "pydantic==2.10.6",
    "pydantic-core==2.27.2",
    "pydantic-settings==2.8.0",
    "pygments==2.18.0",
    "pyjwt==2.10.1",
    "pymongo==4.11.1",
    "pyparsing==3.2.1",
    "pypdf2==3.0.1",
    "pytesseract==0.3.13",
    "python-dotenv==1.0.1",
    "python-multipart==0.0.18",
    "pyyaml==6.0.1",
    "requests==2.32.3",
    "rich==13.7.1",
    "rich-toolkit==0.13.2",
    "rsa==4.9",
    "shellingham==1.5.4",
    "sniffio==1.3.1",
    "sqlalchemy==2.0.38",
    "sqlmodel==0.0.22",
    "starlette==0.40.0",
    "tomli==2.2.1",
    "typer==0.15.1",
    "typing-extensions==4.12.2",
    "ujson==5.10.0",
    "uritemplate==4.1.1",
    "urllib3==2.3.0",
    "uvicorn==0.34.3",
    "uvloop==0.21.0",
    "watchfiles==1.1.0",
    "websockets==15.0",
]

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.per-file-ignores]
"__init__.py" = ["F403", "E402"]
"*" = ["E712"] # not warns of sqlmodel where (Vehicle.is_del == False).

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

# allow multiple top-level packages
[tool.setuptools]
py-modules = []